// Generated by delombok at Mon Aug 29 15:32:21 MSK 2016
/* 
 * (c) 2008- RANDI2 Core Development Team
 * 
 * This file is part of RANDI2.
 * 
 * RANDI2 is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 * 
 * RANDI2 is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * RANDI2. If not, see <http://www.gnu.org/licenses/>.
 */
package de.randi2.model;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import org.hibernate.validator.constraints.NotEmpty;
import de.randi2.model.enumerations.Gender;
import de.randi2.utility.validations.ContactPerson;
import de.randi2.utility.validations.EMailRANDI2;
import de.randi2.utility.validations.TelephonNumber;
/**
 * The Class Person.
 */
/**
 * Sets the login.
 *
 * @param login
 * the new login
 */
@Entity
public class Person extends AbstractDomainObject {
	/**
	 * The Constant serialVersionUID.
	 */
	private static final long serialVersionUID = 5713870200930075449L;
	/**
	 * The Constant MAX_NAME_LENGTH.
	 */
	public static final int MAX_NAME_LENGTH = 50;
	/**
	 * The Constant MAX_TITLE_LENGTH.
	 */
	public static final int MAX_TITLE_LENGTH = 20;
	// Persons Data
	/**
	 * The surname.
	 */
	@NotEmpty
	@Size(max = MAX_NAME_LENGTH)
	private String surname = "";
	/**
	 * The firstname.
	 */
	@NotEmpty
	@Size(max = MAX_NAME_LENGTH)
	private String firstname = "";
	/**
	 * The title.
	 */
	@Size(max = MAX_TITLE_LENGTH)
	private String title = "";
	/**
	 * The sex.
	 */
	@Enumerated(EnumType.STRING)
	@NotNull
	private Gender sex = Gender.MALE;
	// Contact Data
	/**
	 * The email.
	 */
	@EMailRANDI2
	@NotEmpty
	private String email = "";
	/**
	 * The phone.
	 */
	@TelephonNumber
	@NotEmpty
	private String phone = "";
	/**
	 * The mobile.
	 */
	@TelephonNumber
	private String mobile = "";
	/**
	 * The fax.
	 */
	@TelephonNumber
	private String fax = "";
	// Institutional Data
	/**
	 * The assistant. This person has no Login object.
	 */
	@ManyToOne(cascade = CascadeType.ALL)
	@ContactPerson
	private Person assistant;
	// Login data
	/**
	 * The login.
	 */
	@OneToOne(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "person")
	private Login login;

	/* (non-Javadoc)
	 * @see de.randi2.model.AbstractDomainObject#getUIName()
	 */
	@Override
	public String getUIName() {
		return this.getSurname() + ", " + this.getFirstname();
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public Person() {
	}

	/**
	 * The surname.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getSurname() {
		return this.surname;
	}

	/**
	 * The firstname.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getFirstname() {
		return this.firstname;
	}

	/**
	 * The title.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getTitle() {
		return this.title;
	}

	/**
	 * The sex.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public Gender getSex() {
		return this.sex;
	}

	/**
	 * The email.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getEmail() {
		return this.email;
	}

	/**
	 * The phone.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getPhone() {
		return this.phone;
	}

	/**
	 * The mobile.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getMobile() {
		return this.mobile;
	}

	/**
	 * The fax.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getFax() {
		return this.fax;
	}

	/**
	 * The assistant. This person has no Login object.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public Person getAssistant() {
		return this.assistant;
	}

	/**
	 * The login.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public Login getLogin() {
		return this.login;
	}

	/**
	 * The surname.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setSurname(final String surname) {
		this.surname = surname;
	}

	/**
	 * The firstname.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setFirstname(final String firstname) {
		this.firstname = firstname;
	}

	/**
	 * The title.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setTitle(final String title) {
		this.title = title;
	}

	/**
	 * The sex.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setSex(final Gender sex) {
		this.sex = sex;
	}

	/**
	 * The email.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setEmail(final String email) {
		this.email = email;
	}

	/**
	 * The phone.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setPhone(final String phone) {
		this.phone = phone;
	}

	/**
	 * The mobile.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setMobile(final String mobile) {
		this.mobile = mobile;
	}

	/**
	 * The fax.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setFax(final String fax) {
		this.fax = fax;
	}

	/**
	 * The assistant. This person has no Login object.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setAssistant(final Person assistant) {
		this.assistant = assistant;
	}

	/**
	 * The login.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setLogin(final Login login) {
		this.login = login;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof Person)) return false;
		final Person other = (Person) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		if (!super.equals(o)) return false;
		final java.lang.Object this$surname = this.getSurname();
		final java.lang.Object other$surname = other.getSurname();
		if (this$surname == null ? other$surname != null : !this$surname.equals(other$surname)) return false;
		final java.lang.Object this$firstname = this.getFirstname();
		final java.lang.Object other$firstname = other.getFirstname();
		if (this$firstname == null ? other$firstname != null : !this$firstname.equals(other$firstname)) return false;
		final java.lang.Object this$title = this.getTitle();
		final java.lang.Object other$title = other.getTitle();
		if (this$title == null ? other$title != null : !this$title.equals(other$title)) return false;
		final java.lang.Object this$sex = this.getSex();
		final java.lang.Object other$sex = other.getSex();
		if (this$sex == null ? other$sex != null : !this$sex.equals(other$sex)) return false;
		final java.lang.Object this$email = this.getEmail();
		final java.lang.Object other$email = other.getEmail();
		if (this$email == null ? other$email != null : !this$email.equals(other$email)) return false;
		final java.lang.Object this$phone = this.getPhone();
		final java.lang.Object other$phone = other.getPhone();
		if (this$phone == null ? other$phone != null : !this$phone.equals(other$phone)) return false;
		final java.lang.Object this$mobile = this.getMobile();
		final java.lang.Object other$mobile = other.getMobile();
		if (this$mobile == null ? other$mobile != null : !this$mobile.equals(other$mobile)) return false;
		final java.lang.Object this$fax = this.getFax();
		final java.lang.Object other$fax = other.getFax();
		if (this$fax == null ? other$fax != null : !this$fax.equals(other$fax)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof Person;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		result = result * PRIME + super.hashCode();
		final java.lang.Object $surname = this.getSurname();
		result = result * PRIME + ($surname == null ? 43 : $surname.hashCode());
		final java.lang.Object $firstname = this.getFirstname();
		result = result * PRIME + ($firstname == null ? 43 : $firstname.hashCode());
		final java.lang.Object $title = this.getTitle();
		result = result * PRIME + ($title == null ? 43 : $title.hashCode());
		final java.lang.Object $sex = this.getSex();
		result = result * PRIME + ($sex == null ? 43 : $sex.hashCode());
		final java.lang.Object $email = this.getEmail();
		result = result * PRIME + ($email == null ? 43 : $email.hashCode());
		final java.lang.Object $phone = this.getPhone();
		result = result * PRIME + ($phone == null ? 43 : $phone.hashCode());
		final java.lang.Object $mobile = this.getMobile();
		result = result * PRIME + ($mobile == null ? 43 : $mobile.hashCode());
		final java.lang.Object $fax = this.getFax();
		result = result * PRIME + ($fax == null ? 43 : $fax.hashCode());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public java.lang.String toString() {
		return "Person(surname=" + this.getSurname() + ", firstname=" + this.getFirstname() + ", title=" + this.getTitle() + ", sex=" + this.getSex() + ", email=" + this.getEmail() + ", phone=" + this.getPhone() + ", mobile=" + this.getMobile() + ", fax=" + this.getFax() + ", assistant=" + this.getAssistant() + ")";
	}
}
