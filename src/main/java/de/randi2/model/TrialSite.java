// Generated by delombok at Mon Aug 29 15:32:21 MSK 2016
/* 
 * (c) 2008- RANDI2 Core Development Team
 * 
 * This file is part of RANDI2.
 * 
 * RANDI2 is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 * 
 * RANDI2 is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * RANDI2. If not, see <http://www.gnu.org/licenses/>.
 */
package de.randi2.model;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.ManyToMany;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import org.hibernate.validator.constraints.NotEmpty;
import de.randi2.utility.validations.ContactPerson;
import de.randi2.utility.validations.Password;

/**
 * The Class TrialSite.
 */
@Entity
@NamedQueries({@NamedQuery(name = "trialSite.getPersonsTrialSite", query = "select site from TrialSite as site join site.members p where p.id = ?")})
public class TrialSite extends AbstractDomainObject {
	/**
	 * The Constant serialVersionUID.
	 */
	private static final long serialVersionUID = -5501470090122500715L;
	/**
	 * The Constant MAX_LENGTH_POSTCODE.
	 */
	public static final int MAX_LENGTH_POSTCODE = 10;
	/**
	 * The name.
	 */
	@Column(unique = true)
	@NotEmpty
	@Size(max = MAX_VARCHAR_LENGTH)
	private String name = "";
	/**
	 * The street.
	 */
	@Size(max = MAX_VARCHAR_LENGTH)
	@NotNull
	private String street = "";
	/**
	 * The postcode.
	 */
	@Size(max = MAX_LENGTH_POSTCODE)
	@NotNull
	private String postcode = "";
	/**
	 * The city.
	 */
	@Size(max = MAX_VARCHAR_LENGTH)
	@NotNull
	private String city = "";
	/**
	 * The country.
	 */
	@Size(max = MAX_VARCHAR_LENGTH)
	private String country = "";
	/**
	 * The password.
	 */
	@Password
	private String password = "";
	/**
	 * The contact person.
	 */
	@OneToOne(cascade = CascadeType.ALL)
	@ContactPerson
	@NotNull
	private Person contactPerson = null;
	/**
	 * The members.
	 */
	@OneToMany
	private List<Person> members = new ArrayList<Person>();
	/**
	 * The trials.
	 */
	@ManyToMany(mappedBy = "participatingSites")
	private List<Trial> trials = new ArrayList<Trial>();

	/**
	 * This method returns the trial site members with specified role.
	 *
	 * @param role
	 * - role of the searched members
	 *
	 * @return the members with specified role
	 */
	@Transient
	public List<Login> getMembersWithSpecifiedRole(Role role) {
		List<Login> searchedMembers = new ArrayList<Login>();
		for (Person p : this.getMembers()) {
			if (p.getLogin().hasRole(role)) searchedMembers.add(p.getLogin());
		}
		return searchedMembers;
	}

	/* (non-Javadoc)
	 * @see de.randi2.model.AbstractDomainObject#getUIName()
	 */
	@Override
	public String getUIName() {
		return this.getName();
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof TrialSite)) return false;
		final TrialSite other = (TrialSite) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		if (!super.equals(o)) return false;
		final java.lang.Object this$name = this.getName();
		final java.lang.Object other$name = other.getName();
		if (this$name == null ? other$name != null : !this$name.equals(other$name)) return false;
		final java.lang.Object this$street = this.getStreet();
		final java.lang.Object other$street = other.getStreet();
		if (this$street == null ? other$street != null : !this$street.equals(other$street)) return false;
		final java.lang.Object this$postcode = this.getPostcode();
		final java.lang.Object other$postcode = other.getPostcode();
		if (this$postcode == null ? other$postcode != null : !this$postcode.equals(other$postcode)) return false;
		final java.lang.Object this$city = this.getCity();
		final java.lang.Object other$city = other.getCity();
		if (this$city == null ? other$city != null : !this$city.equals(other$city)) return false;
		final java.lang.Object this$country = this.getCountry();
		final java.lang.Object other$country = other.getCountry();
		if (this$country == null ? other$country != null : !this$country.equals(other$country)) return false;
		final java.lang.Object this$password = this.getPassword();
		final java.lang.Object other$password = other.getPassword();
		if (this$password == null ? other$password != null : !this$password.equals(other$password)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof TrialSite;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		result = result * PRIME + super.hashCode();
		final java.lang.Object $name = this.getName();
		result = result * PRIME + ($name == null ? 43 : $name.hashCode());
		final java.lang.Object $street = this.getStreet();
		result = result * PRIME + ($street == null ? 43 : $street.hashCode());
		final java.lang.Object $postcode = this.getPostcode();
		result = result * PRIME + ($postcode == null ? 43 : $postcode.hashCode());
		final java.lang.Object $city = this.getCity();
		result = result * PRIME + ($city == null ? 43 : $city.hashCode());
		final java.lang.Object $country = this.getCountry();
		result = result * PRIME + ($country == null ? 43 : $country.hashCode());
		final java.lang.Object $password = this.getPassword();
		result = result * PRIME + ($password == null ? 43 : $password.hashCode());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public java.lang.String toString() {
		return "TrialSite(name=" + this.getName() + ", street=" + this.getStreet() + ", postcode=" + this.getPostcode() + ", city=" + this.getCity() + ", country=" + this.getCountry() + ", password=" + this.getPassword() + ", contactPerson=" + this.getContactPerson() + ")";
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public TrialSite() {
	}

	/**
	 * The name.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getName() {
		return this.name;
	}

	/**
	 * The street.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getStreet() {
		return this.street;
	}

	/**
	 * The postcode.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getPostcode() {
		return this.postcode;
	}

	/**
	 * The city.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getCity() {
		return this.city;
	}

	/**
	 * The country.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getCountry() {
		return this.country;
	}

	/**
	 * The password.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getPassword() {
		return this.password;
	}

	/**
	 * The contact person.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public Person getContactPerson() {
		return this.contactPerson;
	}

	/**
	 * The members.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public List<Person> getMembers() {
		return this.members;
	}

	/**
	 * The trials.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public List<Trial> getTrials() {
		return this.trials;
	}

	/**
	 * The name.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setName(final String name) {
		this.name = name;
	}

	/**
	 * The street.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setStreet(final String street) {
		this.street = street;
	}

	/**
	 * The postcode.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setPostcode(final String postcode) {
		this.postcode = postcode;
	}

	/**
	 * The city.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setCity(final String city) {
		this.city = city;
	}

	/**
	 * The country.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setCountry(final String country) {
		this.country = country;
	}

	/**
	 * The password.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setPassword(final String password) {
		this.password = password;
	}

	/**
	 * The contact person.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setContactPerson(final Person contactPerson) {
		this.contactPerson = contactPerson;
	}

	/**
	 * The members.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setMembers(final List<Person> members) {
		this.members = members;
	}

	/**
	 * The trials.
	 */
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setTrials(final List<Trial> trials) {
		this.trials = trials;
	}
}
