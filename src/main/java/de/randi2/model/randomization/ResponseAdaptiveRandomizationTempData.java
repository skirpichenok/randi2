// Generated by delombok at Mon Aug 29 15:32:21 MSK 2016
/* 
 * (c) 2008- RANDI2 Core Development Team
 * 
 * This file is part of RANDI2.
 * 
 * RANDI2 is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 * 
 * RANDI2 is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * RANDI2. If not, see <http://www.gnu.org/licenses/>.
 */
package de.randi2.model.randomization;

import java.util.HashMap;
import java.util.Map;
import javax.persistence.DiscriminatorValue;
import javax.persistence.Entity;
import javax.persistence.MapKeyColumn;
import javax.persistence.OneToMany;

/**
 * @author Natalie Waskowzow
 */
@Entity
@DiscriminatorValue("RESPONSE_ADAPTIVE")
public class ResponseAdaptiveRandomizationTempData extends AbstractRandomizationTempData {
	/**
	 * generated serial id
	 */
	private static final long serialVersionUID = 7079082707404044733L;
	@OneToMany
	@MapKeyColumn
	private Map<String, ResponseAdaptiveUrn> responseAdaptiveUrns = new HashMap<String, ResponseAdaptiveUrn>();

	public ResponseAdaptiveUrn getResponseAdaptiveUrn(String stratum) {
		return responseAdaptiveUrns.get(stratum);
	}

	public void setResponseAdaptiveUrn(String stratum, ResponseAdaptiveUrn currentUrn) {
		responseAdaptiveUrns.put(stratum, currentUrn);
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public ResponseAdaptiveRandomizationTempData() {
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public Map<String, ResponseAdaptiveUrn> getResponseAdaptiveUrns() {
		return this.responseAdaptiveUrns;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setResponseAdaptiveUrns(final Map<String, ResponseAdaptiveUrn> responseAdaptiveUrns) {
		this.responseAdaptiveUrns = responseAdaptiveUrns;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public java.lang.String toString() {
		return "ResponseAdaptiveRandomizationTempData(responseAdaptiveUrns=" + this.getResponseAdaptiveUrns() + ")";
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof ResponseAdaptiveRandomizationTempData)) return false;
		final ResponseAdaptiveRandomizationTempData other = (ResponseAdaptiveRandomizationTempData) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		if (!super.equals(o)) return false;
		final java.lang.Object this$responseAdaptiveUrns = this.getResponseAdaptiveUrns();
		final java.lang.Object other$responseAdaptiveUrns = other.getResponseAdaptiveUrns();
		if (this$responseAdaptiveUrns == null ? other$responseAdaptiveUrns != null : !this$responseAdaptiveUrns.equals(other$responseAdaptiveUrns)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof ResponseAdaptiveRandomizationTempData;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		result = result * PRIME + super.hashCode();
		final java.lang.Object $responseAdaptiveUrns = this.getResponseAdaptiveUrns();
		result = result * PRIME + ($responseAdaptiveUrns == null ? 43 : $responseAdaptiveUrns.hashCode());
		return result;
	}
}
