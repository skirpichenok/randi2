// Generated by delombok at Mon Aug 29 15:32:21 MSK 2016
/* 
 * (c) 2008- RANDI2 Core Development Team
 * 
 * This file is part of RANDI2.
 * 
 * RANDI2 is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 * 
 * RANDI2 is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * RANDI2. If not, see <http://www.gnu.org/licenses/>.
 */
package de.randi2.model.randomization;

import java.util.HashMap;
import java.util.Map;
import javax.persistence.DiscriminatorValue;
import javax.persistence.Entity;
import javax.persistence.MapKeyColumn;
import javax.persistence.OneToMany;

@Entity
@DiscriminatorValue("URN")
public class UrnDesignTempData extends AbstractRandomizationTempData {
	private static final long serialVersionUID = -2572300725790883698L;
	@OneToMany
	@MapKeyColumn
	private Map<String, Urn> urns = new HashMap<String, Urn>();

	public Urn getUrn(String stratum) {
		return urns.get(stratum);
	}

	public void setUrn(String stratum, Urn currentUrn) {
		urns.put(stratum, currentUrn);
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public UrnDesignTempData() {
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public Map<String, Urn> getUrns() {
		return this.urns;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setUrns(final Map<String, Urn> urns) {
		this.urns = urns;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public java.lang.String toString() {
		return "UrnDesignTempData(urns=" + this.getUrns() + ")";
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof UrnDesignTempData)) return false;
		final UrnDesignTempData other = (UrnDesignTempData) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		if (!super.equals(o)) return false;
		final java.lang.Object this$urns = this.getUrns();
		final java.lang.Object other$urns = other.getUrns();
		if (this$urns == null ? other$urns != null : !this$urns.equals(other$urns)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof UrnDesignTempData;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		result = result * PRIME + super.hashCode();
		final java.lang.Object $urns = this.getUrns();
		result = result * PRIME + ($urns == null ? 43 : $urns.hashCode());
		return result;
	}
}
