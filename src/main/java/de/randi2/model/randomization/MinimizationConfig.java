// Generated by delombok at Mon Aug 29 15:32:21 MSK 2016
package de.randi2.model.randomization;

import javax.persistence.Entity;
import de.randi2.randomization.Minimization;
import de.randi2.randomization.RandomizationAlgorithm;

@Entity
public class MinimizationConfig extends AbstractRandomizationConfig {
	private static final long serialVersionUID = -7118660260283369544L;
	private double p;
	private boolean withRandomizedSubjects = false;
	private boolean biasedCoinMinimization = true;

	public MinimizationConfig(long seed) {
		super(seed);
	}

	public MinimizationConfig() {
		super(null);
	}

	@Override
	public RandomizationAlgorithm<? extends AbstractRandomizationConfig> createAlgorithm() {
		return new Minimization(super.getTrial());
	}

	@Override
	public RandomizationAlgorithm<? extends AbstractRandomizationConfig> createAlgorithm(long seed) {
		return new Minimization(super.getTrial(), seed);
	}

	@Override
	public AbstractRandomizationTempData getTempData() {
		if (tempData == null) {
			tempData = new MinimizationTempData();
		}
		return tempData;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public double getP() {
		return this.p;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setP(final double p) {
		this.p = p;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean isWithRandomizedSubjects() {
		return this.withRandomizedSubjects;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setWithRandomizedSubjects(final boolean withRandomizedSubjects) {
		this.withRandomizedSubjects = withRandomizedSubjects;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean isBiasedCoinMinimization() {
		return this.biasedCoinMinimization;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setBiasedCoinMinimization(final boolean biasedCoinMinimization) {
		this.biasedCoinMinimization = biasedCoinMinimization;
	}
}
