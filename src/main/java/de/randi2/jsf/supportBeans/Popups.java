// Generated by delombok at Mon Aug 29 15:32:21 MSK 2016
/* 
 * (c) 2008- RANDI2 Core Development Team
 * 
 * This file is part of RANDI2.
 * 
 * RANDI2 is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 * 
 * RANDI2 is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * RANDI2. If not, see <http://www.gnu.org/licenses/>.
 */
package de.randi2.jsf.supportBeans;

import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.context.FacesContext;
import de.randi2.jsf.backingBeans.Randi2Page;
import de.randi2.jsf.backingBeans.ResponseAdd;
import de.randi2.jsf.backingBeans.TSubjectAdd;
import de.randi2.model.Trial;

@ManagedBean(name = "popups")
@SessionScoped
public class Popups {
	// Popup's flags
	private boolean userSavedPVisible = false;
	private boolean changePasswordPVisible = false;
	private boolean changeTrialSitePVisible = false;
	private boolean trialCreatedPVisible = false;
	private boolean trialSiteSavedPVisible = false;
	private boolean subjectAddedPVisible = false;
	private boolean simulationCompletePVisible = false;
	private boolean changeLeadingSitePVisible = false;
	private boolean changePInvestigatorPVisible = false;
	private boolean responseAddedPVisible = false;

	// POPUPS
	public String hideTrialCreatedPopup() {
		this.trialCreatedPVisible = false;
		Randi2Page rPage = ((Randi2Page) FacesContext.getCurrentInstance().getApplication().getELResolver().getValue(FacesContext.getCurrentInstance().getELContext(), null, "randi2Page"));
		rPage.viewTrials(null);
		return Randi2.SUCCESS;
	}

	public String showTrialCreatedPopup() {
		this.trialCreatedPVisible = true;
		return Randi2.SUCCESS;
	}

	public String hideUserSavedPopup() {
		this.userSavedPVisible = false;
		return Randi2.SUCCESS;
	}

	public String showChangePasswordPopup() {
		// Show the changePasswordPopup
		this.changePasswordPVisible = true;
		return Randi2.SUCCESS;
	}

	public String hideChangePasswordPopup() {
		// Hide the changePasswordPopup
		this.changePasswordPVisible = false;
		return Randi2.SUCCESS;
	}

	public String showChangeTrialSitePopup() {
		// Show the changeTrialSitePopup
		this.changeTrialSitePVisible = true;
		return Randi2.SUCCESS;
	}

	public String hideChangeTrialSitePopup() {
		// Hide the changeTrialSitePopup
		this.changeTrialSitePVisible = false;
		return Randi2.SUCCESS;
	}

	public String hideTrialSiteSavedPopup() {
		this.trialSiteSavedPVisible = false;
		return Randi2.SUCCESS;
	}

	public String showTrialSiteSavedPopup() {
		this.trialSiteSavedPVisible = true;
		return Randi2.SUCCESS;
	}

	public String hideSubjectAddedPopup() {
		this.subjectAddedPVisible = false;
		TSubjectAdd tsa = ((TSubjectAdd) FacesContext.getCurrentInstance().getApplication().getELResolver().getValue(FacesContext.getCurrentInstance().getELContext(), null, "tSubjectAdd"));
		Trial trial = tsa.getCurrentTrial();
		Randi2Page rPage = ((Randi2Page) FacesContext.getCurrentInstance().getApplication().getELResolver().getValue(FacesContext.getCurrentInstance().getELContext(), null, "randi2Page"));
		rPage.showTrial(trial);
		return Randi2.SUCCESS;
	}

	public String showSimulationCompletePopup() {
		this.simulationCompletePVisible = true;
		return Randi2.SUCCESS;
	}

	public String hideChangeLeadingSitePopup() {
		this.changeLeadingSitePVisible = false;
		return Randi2.SUCCESS;
	}

	public String showChangeLeadingSitePopup() {
		this.changeLeadingSitePVisible = true;
		return Randi2.SUCCESS;
	}

	public String hideChangePInvestigatorPopup() {
		this.changePInvestigatorPVisible = false;
		return Randi2.SUCCESS;
	}

	public String showChangePInvestigatorPopup() {
		this.changePInvestigatorPVisible = true;
		return Randi2.SUCCESS;
	}

	public String hideSimulationCompletePopup() {
		this.simulationCompletePVisible = false;
		return Randi2.SUCCESS;
	}

	public String showSubjectAddedPopup() {
		this.subjectAddedPVisible = true;
		return Randi2.SUCCESS;
	}

	public String hideResponseAddedPopup() {
		this.responseAddedPVisible = false;
		ResponseAdd respAdd = ((ResponseAdd) FacesContext.getCurrentInstance().getApplication().getELResolver().getValue(FacesContext.getCurrentInstance().getELContext(), null, "responseAdd"));
		Trial trial = respAdd.getCurrentTrial();
		Randi2Page rPage = ((Randi2Page) FacesContext.getCurrentInstance().getApplication().getELResolver().getValue(FacesContext.getCurrentInstance().getELContext(), null, "randi2Page"));
		rPage.showTrial(trial);
		return Randi2.SUCCESS;
	}

	public String showResponseAddedPopup() {
		this.responseAddedPVisible = true;
		return Randi2.SUCCESS;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setUserSavedPVisible(final boolean userSavedPVisible) {
		this.userSavedPVisible = userSavedPVisible;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean isUserSavedPVisible() {
		return this.userSavedPVisible;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setChangePasswordPVisible(final boolean changePasswordPVisible) {
		this.changePasswordPVisible = changePasswordPVisible;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean isChangePasswordPVisible() {
		return this.changePasswordPVisible;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setChangeTrialSitePVisible(final boolean changeTrialSitePVisible) {
		this.changeTrialSitePVisible = changeTrialSitePVisible;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean isChangeTrialSitePVisible() {
		return this.changeTrialSitePVisible;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setTrialCreatedPVisible(final boolean trialCreatedPVisible) {
		this.trialCreatedPVisible = trialCreatedPVisible;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean isTrialCreatedPVisible() {
		return this.trialCreatedPVisible;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setTrialSiteSavedPVisible(final boolean trialSiteSavedPVisible) {
		this.trialSiteSavedPVisible = trialSiteSavedPVisible;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean isTrialSiteSavedPVisible() {
		return this.trialSiteSavedPVisible;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setSubjectAddedPVisible(final boolean subjectAddedPVisible) {
		this.subjectAddedPVisible = subjectAddedPVisible;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean isSubjectAddedPVisible() {
		return this.subjectAddedPVisible;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setSimulationCompletePVisible(final boolean simulationCompletePVisible) {
		this.simulationCompletePVisible = simulationCompletePVisible;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean isSimulationCompletePVisible() {
		return this.simulationCompletePVisible;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setChangeLeadingSitePVisible(final boolean changeLeadingSitePVisible) {
		this.changeLeadingSitePVisible = changeLeadingSitePVisible;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean isChangeLeadingSitePVisible() {
		return this.changeLeadingSitePVisible;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setChangePInvestigatorPVisible(final boolean changePInvestigatorPVisible) {
		this.changePInvestigatorPVisible = changePInvestigatorPVisible;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean isChangePInvestigatorPVisible() {
		return this.changePInvestigatorPVisible;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setResponseAddedPVisible(final boolean responseAddedPVisible) {
		this.responseAddedPVisible = responseAddedPVisible;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean isResponseAddedPVisible() {
		return this.responseAddedPVisible;
	}
	// ----
}
