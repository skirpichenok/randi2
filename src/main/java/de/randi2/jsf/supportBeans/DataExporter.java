// Generated by delombok at Mon Aug 29 15:32:21 MSK 2016
/* 
 * (c) 2008- RANDI2 Core Development Team
 * 
 * This file is part of RANDI2.
 * 
 * RANDI2 is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 * 
 * RANDI2 is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * RANDI2. If not, see <http://www.gnu.org/licenses/>.
 */
package de.randi2.jsf.supportBeans;

import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.event.ValueChangeEvent;
import com.icesoft.faces.context.effects.Effect;
import com.icesoft.faces.context.effects.Highlight;

@ManagedBean(name = "dataExporter")
@SessionScoped
public class DataExporter {
	private Effect changeEffect;
	private String type;
	private boolean showDownload = false;

	public DataExporter() {
		changeEffect = new Highlight("#fda505");
		changeEffect.setFired(true);
		type = "exel";
	}

	public void setType(String type) {
		if (type != null && (type.equals("excel") || type.equals("csv"))) {
			showDownload = true;
		} else {
			showDownload = false;
		}
		this.type = type;
	}

	public void typeChangeListener(ValueChangeEvent event) {
		this.changeEffect.setFired(false);
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public Effect getChangeEffect() {
		return this.changeEffect;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public String getType() {
		return this.type;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean isShowDownload() {
		return this.showDownload;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setChangeEffect(final Effect changeEffect) {
		this.changeEffect = changeEffect;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setShowDownload(final boolean showDownload) {
		this.showDownload = showDownload;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof DataExporter)) return false;
		final DataExporter other = (DataExporter) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		final java.lang.Object this$changeEffect = this.getChangeEffect();
		final java.lang.Object other$changeEffect = other.getChangeEffect();
		if (this$changeEffect == null ? other$changeEffect != null : !this$changeEffect.equals(other$changeEffect)) return false;
		final java.lang.Object this$type = this.getType();
		final java.lang.Object other$type = other.getType();
		if (this$type == null ? other$type != null : !this$type.equals(other$type)) return false;
		if (this.isShowDownload() != other.isShowDownload()) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof DataExporter;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final java.lang.Object $changeEffect = this.getChangeEffect();
		result = result * PRIME + ($changeEffect == null ? 43 : $changeEffect.hashCode());
		final java.lang.Object $type = this.getType();
		result = result * PRIME + ($type == null ? 43 : $type.hashCode());
		result = result * PRIME + (this.isShowDownload() ? 79 : 97);
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public java.lang.String toString() {
		return "DataExporter(changeEffect=" + this.getChangeEffect() + ", type=" + this.getType() + ", showDownload=" + this.isShowDownload() + ")";
	}
}
